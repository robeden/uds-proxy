/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.robeden.uds_proxy;

import picocli.CommandLine;

import java.nio.file.Files;
import java.nio.file.Path;
import java.util.concurrent.Callable;

import static picocli.CommandLine.*;

public class App implements Callable<Integer> {
    @Spec
    Model.CommandSpec spec; // injected by picocli

    private Path proxy;
    private Path destination;


    @Parameters(
        index = "0",
        paramLabel = "<proxy-file-location>",
        description = "Location for proxy socket file")
    public void setProxy(Path value) {
        proxy = value;
        if (Files.exists(value)) {
            throw new ParameterException(spec.commandLine(),
                String.format("Invalid value '%s' for 'proxy' parameter: " +
                    "file already exists", value));
        }
    }

    @Parameters(
        index = "1",
        paramLabel = "<socket-file>",
        description = "Existing socket file proxy will connect to")
    public void setDestination(Path value) {
        destination = value;
        if (!Files.exists(value)) {
            throw new ParameterException(spec.commandLine(),
                String.format("Invalid value '%s' for 'destination' parameter: " +
                    "file does not exist", value));
        }
    }


    @Override
    public Integer call() throws Exception {
        return 0;
    }

    public static void main(String... args) {
        int exitCode = new CommandLine(new App()).execute(args);
        System.exit(exitCode);
    }
}
